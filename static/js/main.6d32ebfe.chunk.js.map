{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/Loader/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","getSearchQuery","useState","value","setValue","className","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","ImageGalleryItem","dataListCard","openModal","map","webformatURL","largeImageURL","id","onClick","data-bigpicture","src","alt","ImageGallery","propTypes","PropTypes","array","isRequired","Button","getApiData","modalRoot","document","querySelector","Modal","img","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","event","target","Loader","color","height","width","timeout","App","searchQuery","setSearchQuery","todo","setTodo","page","setPage","loading","setLoading","bigPicture","setBigPicture","showModal","setShowModal","axios","get","then","hits","data","finally","scrollTo","top","documentElement","scrollHeight","behavior","bigpicture","dataset","length","resetAllData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8PAGaA,EAAY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC1B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaC,SAPd,SAACC,GAClBA,EAAEC,iBACFP,EAAeE,IAKb,UACE,wBAAQM,KAAK,SAASJ,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVI,KAAK,OACLN,MAAOA,EACPO,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAtBc,SAACN,GACrBH,EAASG,EAAEO,cAAcX,gB,OCJhBY,EAAmB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC/C,OAAOD,EAAaE,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,GAAIZ,EAApC,EAAoCA,KAApC,OACtB,oBACEY,GAAIA,EAEJC,QAASL,EACTM,kBAAiBH,EACjBf,UAAU,mBALZ,SAOE,qBAAKmB,IAAKL,EAAcM,IAAKhB,EAAMJ,UAAU,4BALxCgB,OCHEK,EAAe,SAAC,GAAiC,IAA/BV,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC3C,OACE,oBAAIZ,UAAU,eAAd,SACE,cAAC,EAAD,CAAkBW,aAAcA,EAAcC,UAAWA,OAK/DF,EAAiBY,UAAY,CAC3BX,a,OAAcY,EAAUC,MAAMC,YCVzB,IAAMC,EAAS,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACvB,OACE,wBAAQvB,KAAK,SAASJ,UAAU,SAASiB,QAASU,EAAlD,wBCAEC,EAAYC,SAASC,cAAc,eAE5BC,EAAQ,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,QAC3BC,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,kBAAMF,OAAOG,oBAAoB,UAAWD,MAClD,IAEH,IAAMA,EAAgB,SAACnC,GACN,WAAXA,EAAEqC,MACJN,KAUJ,OAAOO,uBACL,qBAAKxC,UAAU,UAAUiB,QAPL,SAACwB,GACjBA,EAAMhC,gBAAkBgC,EAAMC,QAChCT,KAKF,SACE,qBAAKjC,UAAU,QAAQmB,IAAKa,EAAKZ,IAAI,2BAEvCQ,I,yBC3BSe,EAAS,WACpB,OACE,qBAAK3C,UAAU,SAAf,SACE,cAAC,IAAD,CACEI,KAAK,OACLwC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,S,iBCiEFC,EAlEH,WACV,MAAsCnD,mBAAS,IAA/C,mBAAOoD,EAAP,KAAoBC,EAApB,KACA,EAAwBrD,mBAAS,IAAjC,mBAAOsD,EAAP,KAAaC,EAAb,KACA,EAAwBvD,mBAAS,GAAjC,mBAAOwD,EAAP,KAAaC,EAAb,KACA,EAA8BzD,oBAAS,GAAvC,mBAAO0D,EAAP,KAAgBC,EAAhB,KACA,EAAoC3D,mBAAS,IAA7C,mBAAO4D,EAAP,KAAmBC,EAAnB,KACA,EAAkC7D,oBAAS,GAA3C,mBAAO8D,EAAP,KAAkBC,EAAlB,KAIMjC,EAAa,WACbsB,IACFO,GAAW,GACXK,IACGC,IADH,qCAEkCb,EAFlC,iBAEsDI,EAFtD,gBALY,qCAKZ,yDAIGU,MACC,gBAAWC,EAAX,EAAGC,KAAQD,KAAX,OAAwBZ,EAAQ,GAAD,mBAAKD,GAAL,YAAca,OAC7CV,EAAQD,EAAO,IAEhBa,SAAQ,kBAAMV,GAAW,QAIhCtB,qBAAU,kBAAMP,MAAc,CAACsB,IA4B/B,OALAd,OAAOgC,SAAS,CACdC,IAAKvC,SAASwC,gBAAgBC,aAC9BC,SAAU,WAIV,gCACE,cAAC,EAAD,CAAW3E,eA5BQ,SAACM,GACtBgD,EAAehD,GACfoD,EAAQ,GACRF,EAAQ,OA0BN,cAAC,EAAD,CAAczC,aAAcwC,EAAMvC,UAlBpB,SAACV,GACjB,IAAQsE,EAAetE,EAAEO,cAAcgE,QAA/BD,WACRd,EAAcc,GACdZ,GAAa,MAgBVT,EAAKuB,OAAS,GACb,cAAC,EAAD,CAAQ/C,WAAYA,EAAYgD,aAzBjB,WACnBzB,EAAe,IACfI,EAAQ,MAyBLC,GAAW,cAAC,EAAD,IACXI,GAAa,cAAC,EAAD,CAAO3B,IAAKyB,EAAYxB,QAjBtB,WAClB2B,GAAcD,UC1CHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzD,SAAS0D,eAAe,SAG1BX,M","file":"static/js/main.6d32ebfe.chunk.js","sourcesContent":["import \"../../App.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport const Searchbar = ({ getSearchQuery }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const getValueInput = (e) => {\r\n    setValue(e.currentTarget.value);\r\n  };\r\n  const SubmitForm = (e) => {\r\n    e.preventDefault();\r\n    getSearchQuery(value);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={SubmitForm}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          value={value}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={getValueInput}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n","import \"../../App.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ImageGalleryItem = ({ dataListCard, openModal }) => {\r\n  return dataListCard.map(({ webformatURL, largeImageURL, id, type }) => (\r\n    <li\r\n      id={id}\r\n      key={id}\r\n      onClick={openModal}\r\n      data-bigpicture={largeImageURL}\r\n      className=\"ImageGalleryItem\"\r\n    >\r\n      <img src={webformatURL} alt={type} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  ));\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  dataListCard: PropTypes.array.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport \"../../App.css\";\r\nimport { ImageGalleryItem } from \"../ImageGalleryItem\";\r\n\r\nexport const ImageGallery = ({ dataListCard, openModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      <ImageGalleryItem dataListCard={dataListCard} openModal={openModal} />\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  dataListCard: PropTypes.array.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport \"../../App.css\";\r\n\r\nexport const Button = ({ getApiData }) => {\r\n  return (\r\n    <button type=\"Submit\" className=\"Button\" onClick={getApiData}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  getApiData: PropTypes.func.isRequired,\r\n};\r\n","import \"../../App.css\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport const Modal = ({ img, onClose }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, []);\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const BackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={BackdropClick}>\r\n      <img className=\"Modal\" src={img} alt=\"thematic-Photography\" />\r\n    </div>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  img: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loading from \"react-loader-spinner\";\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Loading\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={30000} //3 secs\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { Searchbar } from \"./Components/Searchbar\";\nimport { useState, useEffect } from \"react\";\nimport { ImageGallery } from \"./Components/ImageGallery\";\nimport { Button } from \"./Components/Button\";\nimport { Modal } from \"./Components/Modal\";\nimport { Loader } from \"./Components/Loader\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [todo, setTodo] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [bigPicture, setBigPicture] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n\n  const API_KEY = \"21345832-5dab6ae111cd5d8e046b71308\";\n\n  const getApiData = () => {\n    if (searchQuery) {\n      setLoading(true);\n      axios\n        .get(\n          `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n        )\n        .then(\n          ({ data: { hits } }) => setTodo([...todo, ...hits]),\n          setPage(page + 1)\n        )\n        .finally(() => setLoading(false));\n    }\n  };\n\n  useEffect(() => getApiData(), [searchQuery]);\n\n  const getSearchQuery = (e) => {\n    setSearchQuery(e);\n    setPage(1);\n    setTodo([]);\n  };\n\n  const resetAllData = () => {\n    setSearchQuery(\"\");\n    setPage(1);\n  };\n\n  const openModal = (e) => {\n    const { bigpicture } = e.currentTarget.dataset;\n    setBigPicture(bigpicture);\n    setShowModal(true);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: \"smooth\",\n  });\n\n  return (\n    <div>\n      <Searchbar getSearchQuery={getSearchQuery} />\n      <ImageGallery dataListCard={todo} openModal={openModal} />\n      {todo.length > 0 && (\n        <Button getApiData={getApiData} resetAllData={resetAllData} />\n      )}\n      {loading && <Loader />}\n      {showModal && <Modal img={bigPicture} onClose={toggleModal} />}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}